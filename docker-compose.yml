services:
  front:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: frontend-service
    ports:
      - "8501:8501"
    networks:
      - app-network
    restart: always

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: api-service
    volumes:
      - ./weights:/workspace/weights
      - ./data:/workspace/data
    ports:
      - "3000:3000"
    networks:
      - app-network
    restart: always

  # postgres:
  #   build: 
  #     context: .
  #     dockerfile: postgres/Dockerfile
  #   container_name: postgres
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: test
  #     POSTGRES_DB: mydatabase
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./data/all_docs:/all_docs
  #     - ./postgres/data:/var/lib/postgresql/data
  #     - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql # Mount the SQL file
  #   restart: always

  nginx:
    image: nginx:latest
    container_name: nginx-service
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # Mount NGINX config
    ports:
      - "80:80" # Expose NGINX on port 80
    networks:
      - app-network
    restart: always

volumes:
  data:

networks:
  app-network:
    driver: bridge

